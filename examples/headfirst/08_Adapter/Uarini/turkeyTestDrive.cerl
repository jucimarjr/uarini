%% Fonte implementado a partir de: Livro Head First Design Patterns. 
%% Autores: Freeman, E., Freeman, E., Sierra, K., and Bates, B. (2004).O'Reilly Media Inc., 01st ed.
-class(turkeyTestDrive).
-export([main/0]).

class_methods.

main() ->
	Duck = mallardDuck::new_(),
	DuckAdapter = duckAdapter::new(Duck),
	
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly(),
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly(),
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly(),
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly(),
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly(),
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly(),
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly(),
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly(),
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly(),
	io:format("The DuckAdapter says..."),
	DuckAdapter::gobble(),
	DuckAdapter::fly().